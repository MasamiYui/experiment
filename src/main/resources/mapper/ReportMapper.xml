<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.experiment.dao.ReportMapper" >
  <resultMap id="BaseResultMap" type="com.experiment.domain.Report" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="teacher_id" property="teacherId" jdbcType="VARCHAR" />
    <result column="course_id" property="courseId" jdbcType="VARCHAR" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="req" property="req" jdbcType="VARCHAR" />
    <result column="path" property="path" jdbcType="VARCHAR" />
    <result column="publicdate" property="publicdate" jdbcType="DATE" />
    <result column="todate" property="todate" jdbcType="DATE" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, teacher_id, course_id, title, req, path, publicdate, todate
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_report
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_report
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.experiment.domain.Report" >
    insert into t_report (id, teacher_id, course_id, 
      title, req, path, publicdate, 
      todate)
    values (#{id,jdbcType=INTEGER}, #{teacherId,jdbcType=VARCHAR}, #{courseId,jdbcType=VARCHAR}, 
      #{title,jdbcType=VARCHAR}, #{req,jdbcType=VARCHAR}, #{path,jdbcType=VARCHAR}, #{publicdate,jdbcType=DATE}, 
      #{todate,jdbcType=DATE})
  </insert>
  <insert id="insertSelective" parameterType="com.experiment.domain.Report" >
    insert into t_report
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="teacherId != null" >
        teacher_id,
      </if>
      <if test="courseId != null" >
        course_id,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="req != null" >
        req,
      </if>
      <if test="path != null" >
        path,
      </if>
      <if test="publicdate != null" >
        publicdate,
      </if>
      <if test="todate != null" >
        todate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="teacherId != null" >
        #{teacherId,jdbcType=VARCHAR},
      </if>
      <if test="courseId != null" >
        #{courseId,jdbcType=VARCHAR},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="req != null" >
        #{req,jdbcType=VARCHAR},
      </if>
      <if test="path != null" >
        #{path,jdbcType=VARCHAR},
      </if>
      <if test="publicdate != null" >
        #{publicdate,jdbcType=DATE},
      </if>
      <if test="todate != null" >
        #{todate,jdbcType=DATE},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.experiment.domain.Report" >
    update t_report
    <set >
      <if test="teacherId != null" >
        teacher_id = #{teacherId,jdbcType=VARCHAR},
      </if>
      <if test="courseId != null" >
        course_id = #{courseId,jdbcType=VARCHAR},
      </if>
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="req != null" >
        req = #{req,jdbcType=VARCHAR},
      </if>
      <if test="path != null" >
        path = #{path,jdbcType=VARCHAR},
      </if>
      <if test="publicdate != null" >
        publicdate = #{publicdate,jdbcType=DATE},
      </if>
      <if test="todate != null" >
        todate = #{todate,jdbcType=DATE},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.experiment.domain.Report" >
    update t_report
    set teacher_id = #{teacherId,jdbcType=VARCHAR},
      course_id = #{courseId,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR},
      req = #{req,jdbcType=VARCHAR},
      path = #{path,jdbcType=VARCHAR},
      publicdate = #{publicdate,jdbcType=DATE},
      todate = #{todate,jdbcType=DATE}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>